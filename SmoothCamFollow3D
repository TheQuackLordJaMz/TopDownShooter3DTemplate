using UnityEngine;

public class SmoothCameraFollow3D : MonoBehaviour
{
    // How far the camera should stay from the target (X, Y, Z offset)
    [SerializeField] private Vector3 offset = new Vector3(0, 10f, -5f);

    // The smoothing factor (lower = smoother but slower, higher = faster)
    [SerializeField] private float damping = 0.2f;

    // The object the camera follows (usually the player)
    public Transform target;

    // Velocity reference for SmoothDamp
    private Vector3 vel = Vector3.zero;

    private void LateUpdate()
    {
        if (target == null) return;

        // Desired position is targetâ€™s position plus the offset
        Vector3 targetPos = target.position + offset;

        // Smoothly move camera towards the desired position
        transform.position = Vector3.SmoothDamp(transform.position, targetPos, ref vel, damping);

        // Make the camera always look at the target
        transform.LookAt(target.position);
    }
}
